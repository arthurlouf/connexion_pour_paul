// server/routes/authRoutes.js

const express = require('express');
const router = express.Router();
const { register, login, verifyEmail, forgotPassword, resetPassword } = require('../controllers/authController');

// ‚úÖ V√©rification du chargement des fonctions du contr√¥leur
console.log("üìù AuthController charg√© avec succ√®s");

// ‚úÖ Route pour l'inscription (avec validation des r√¥les)
router.post('/register/:type', (req, res, next) => {
    const { type } = req.params;
    const validRoles = ["agent", "proprietaire", "locataire"];

    if (!validRoles.includes(type)) {
        return res.status(400).json({ error: "R√¥le invalide." });
    }

    // Passe au contr√¥leur si le r√¥le est valide
    register(req, res, next);
});

// ‚úÖ Route pour la v√©rification des comptes
router.get('/verify/:token', verifyEmail);

// ‚úÖ Route pour la connexion
router.post('/login', login);

// ‚úÖ Route pour demander un lien de r√©initialisation de mot de passe
router.post('/forgot-password', forgotPassword);

// ‚úÖ Route pour r√©initialiser le mot de passe avec le token
router.post('/reset-password/:token', resetPassword);

module.exports = router;
